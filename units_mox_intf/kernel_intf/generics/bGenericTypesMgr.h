//----------------------------------------------------------------------------// File : bGenericTypesMgr.h// Project : MacMap// Purpose : Header file : Root class for types manager// Author : Benoit Ogier, benoit.ogier@macmap.com//// Copyright (C) 1997-2015 Carte Blanche Conseil.//// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// (at your option) any later version.//// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.//// You should have received a copy of the GNU General Public License// along with this program.  If not, see <http://www.gnu.org/licenses/>.//// See the LICENSE.txt file for more information.////----------------------------------------------------------------------------// //----------------------------------------------------------------------------// 16/01/2004 creation.//----------------------------------------------------------------------------#ifndef __bGenericTypesMgr__#define __bGenericTypesMgr__//----------------------------------------------------------------------------#include <mox_intf/bGenericMgr.h>#include <mox_intf/bGenericType.h>//----------------------------------------------------------------------------class bGenericTypesMgr : public bGenericMgr{	public:		virtual ~bGenericTypesMgr	(	){};			virtual int load			(	)=0;		virtual int load			(	int idx)=0;		virtual int unload			(	)=0;		virtual int add				(	const char* name, 										const char* path,										const char* data, 										int tblkind, 										int typkind)=0;	// New table		virtual int add				(	const char* name,										const char* path, 										int tblkind)=0; // Existing table		virtual int rmv				(	int idx)=0;				virtual int rename			(	int idx,										const char* name)=0;			virtual int count			(	)=0;		virtual bGenericType* get	(	int idx)=0;		virtual int index			(	const char *tname)=0;		virtual int index			(	double tid)=0;				virtual bool make			(	)=0;};//----------------------------------------------------------------------------enum{	kTypMgrRootErr_					=100000,		kTypMgrLoadTypeNewErr_			=-(kTypMgrRootErr_+1),	kTypMgrLoadTypeLoadErr_			=-(kTypMgrRootErr_+2),	kTypMgrLoadAddElementErr_		=-(kTypMgrRootErr_+3),		kTypMgrUnloadGetElementErr_		=-(kTypMgrRootErr_+11),	kTypMgrUnloadTypeNullErr_		=-(kTypMgrRootErr_+12),		kTypMgrAddCreateTypeExistErr_	=-(kTypMgrRootErr_+21),	kTypMgrAddCreateTypeNewErr_		=-(kTypMgrRootErr_+22),		kTypMgrAddOpenTypeExistErr_		=-(kTypMgrRootErr_+31),	kTypMgrAddOpenPathAddErr_		=-(kTypMgrRootErr_+32),	kTypMgrAddOpenLoadErr_			=-(kTypMgrRootErr_+33),	kTypMgrAddOpenAddStyleErr_		=-(kTypMgrRootErr_+34),			kTypMgrDummyErr_				=-(kTypMgrRootErr_+999)};//----------------------------------------------------------------------------#endif